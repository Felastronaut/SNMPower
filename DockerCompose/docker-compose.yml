version: "3.6"

# use docker volume to persist ElasticSearch data outside of a container.
volumes:
  filebeat:
  logs:
services:
 #grafana container
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
 
 #elasticsearch container
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - http.port=9200
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ports:
      - '9200:9200'
      - '9300:9300'

  #filebeat container
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.9.1
    user: root #To read the docker socket
    container_name: filebeat
    volumes:
      #Configuration of filebeat
      - "./config/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro"
      #Logs who need to be readed
      - "./Logs:/var/logs:ro"
    command: ["-strict.perms=false"]
    restart: on-failure


  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.1
    container_name: kibana
    #volumes:
    #  - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    ports: ['5601:5601']

  
  metricbeat:
      container_name: metricbeat
      hostname: metricbeat
      user: root #To read the docker socket
      image: docker.elastic.co/beats/metricbeat:7.9.1
      logging:
        options:
          max-file: "3"
          max-size: "50m"
      volumes:
        #Mount the metricbeat configuration so users can make edits.
        - ./config/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml
        #Mount the modules.d directory into the container. This allows user to potentially make changes to the modules and they will be dynamically loaded.
        - ./config/modules.d/:/usr/share/metricbeat/modules.d/
        #The commented sections below enable Metricbeat to monitor the Docker host rather than the Metricbeat container. These are used by the system module.
        - /proc:/hostfs/proc:ro
        - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
        #Allows us to report on docker from the hosts information.
        - /var/run/docker.sock:/var/run/docker.sock
        #We mount the host filesystem so we can report on disk usage with the system module.
        - /:/hostfs:ro
      command: metricbeat -e -system.hostfs=/hostfs -strict.perms=false
      restart: on-failure